# addnoise_findprim_daqsimanas.fcl

# Read in (presumably noise-free) waveforms, add noise and pedestals,
# then find trigger primitives on the (now noisy) waveforms, and save
# the trigger primitives (as "Hits") to an output TTree.

# Any number of trigger primitive finders can be run: useful for
# running the same finder with multiple parameter settings, for
# example. The output of each trigger primitive finder should be
# connected to a DaqSimAna analyzer


#include "trigprim.fcl"
BEGIN_PROLOG
trigprim_datahit: {
   module_type: DataHit
   HitLabel: "foo"

}
END_PROLOG
#include "services_dune.fcl"


process_name: PrimSim

services: @local::protodune_services
services.TFileService: { fileName: "protodune_trigprim_multithreshold.root" }
services.TimeTracker:       {}
services.MemoryTracker:         { } # default is one
services.RandomNumberGenerator: {} #ART native random number generator
// services.FileCatalogMetadata:  @local::art_file_catalog_mc
services.NuRandomService:       @local::per_event_NuRandomService  # seedservice.fcl
services.message:              @local::dune_message_services_prod
#source is now a root file
source: {
  module_type: RootInput
  maxEvents:  -1        # Number of events to create
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics: {
   producers: {
      # You can add any number of trigger primitive finders here. Make
      # sure each one has a distinct name, and has a corresponding
      # daqsimana analyzer (otherwise you won't get a corresponding
      # TTree in the output file. Also make sure to add it to the "simulate" list below
      trigprim800: @local::trigprimpass1_protodune
      trigprim1000: @local::trigprimpass1_protodune
      trigprim1200: @local::trigprimpass1_protodune
      trigprim1400: @local::trigprimpass1_protodune
      trigprim1600: @local::trigprimpass1_protodune
      trigprim1800: @local::trigprimpass1_protodune
      trigprim2000: @local::trigprimpass1_protodune
      trigprim2400: @local::trigprimpass1_protodune
      trigprim2800: @local::trigprimpass1_protodune
      trigprim3200: @local::trigprimpass1_protodune

   }
   
   analyzers:
   {
      # Create an SNAna for each trigger primitive finders. Make
      # sure to add each one to the "ana" list below
      datahittrigprim800:     @local::trigprim_datahit
      datahittrigprim1000:    @local::trigprim_datahit
      datahittrigprim1200:    @local::trigprim_datahit
      datahittrigprim1400:    @local::trigprim_datahit
      datahittrigprim1600:    @local::trigprim_datahit
      datahittrigprim1800:    @local::trigprim_datahit
      datahittrigprim2000:    @local::trigprim_datahit
      datahittrigprim2400:    @local::trigprim_datahit
      datahittrigprim2800:    @local::trigprim_datahit
      datahittrigprim3200:    @local::trigprim_datahit
      waveformstotree: {
         module_type: "WaveformsToTree"
         InputTag: "tpcrawdecoder:daq:DecoderandReco"
         MaxChannels: 50
      }
   }

   reco: [ trigprim800, trigprim1000, trigprim1200, trigprim1400, trigprim1600, trigprim1800, trigprim2000, trigprim2400, trigprim2800, trigprim3200 ]
   ana: [ datahittrigprim800, datahittrigprim1000, datahittrigprim1200, datahittrigprim1400, datahittrigprim1600, datahittrigprim1800, datahittrigprim2000, datahittrigprim2400, datahittrigprim2800, datahittrigprim3200, waveformstotree ]

   trigger_paths: [reco] 
   end_paths: [ ana ] 

}

# Modify the settings of each of the trigger primitive finders. If you
# want to use a different trigger primitive finder class, set
# "physics.producers.<itemname>.finder.tool_type: MyNewTriggerPrimitiveFinderTool"
physics.producers.trigprim800.finder.Threshold:   800
physics.producers.trigprim1000.finder.Threshold: 1000
physics.producers.trigprim1200.finder.Threshold: 1200
physics.producers.trigprim1400.finder.Threshold: 1400
physics.producers.trigprim1600.finder.Threshold: 1600
physics.producers.trigprim1800.finder.Threshold: 1800
physics.producers.trigprim2000.finder.Threshold: 2000
physics.producers.trigprim2400.finder.Threshold: 2400
physics.producers.trigprim2800.finder.Threshold: 2800
physics.producers.trigprim3200.finder.Threshold: 3200


# Set the HitLabel to make sure each DaqAnaSim reads hits from its
#  corresponding TriggerPrimitiveFinder
physics.analyzers.datahittrigprim800.HitLabel:   "trigprim800"
physics.analyzers.datahittrigprim1000.HitLabel: "trigprim1000"
physics.analyzers.datahittrigprim1200.HitLabel: "trigprim1200"
physics.analyzers.datahittrigprim1400.HitLabel: "trigprim1400"
physics.analyzers.datahittrigprim1600.HitLabel: "trigprim1600"
physics.analyzers.datahittrigprim1800.HitLabel: "trigprim1800"
physics.analyzers.datahittrigprim2000.HitLabel: "trigprim2000"
physics.analyzers.datahittrigprim2400.HitLabel: "trigprim2400"
physics.analyzers.datahittrigprim2800.HitLabel: "trigprim2800"
physics.analyzers.datahittrigprim3200.HitLabel: "trigprim3200"


